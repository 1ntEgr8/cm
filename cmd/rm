#!/usr/bin/env bash

rm_file() {
    filepath="$1"
    filename=$(basename $filepath)
    
    # check if file exists
    if [[ ! -e $filepath ]]; then
        error "File $filepath does not exist"
    fi

    # check if it is a file (and not a dir)
    if [[ ! -f $filepath ]]; then
        error "$filepath is not a file"
    fi
    
    links_path=$(dirname $filepath)/links
    if [[ ! -e $links_path ]]; then
        info "no 'links' file found"
        info "skipping symlink check"
    else
        out=$(grep -F "$filename" $links_path)
        if [[ $? -eq 0 ]]; then
            # warn about link
            symlink=$(echo "$out" | awk '{print $1}')

            # replace ~ with $HOME
            symlink=${symlink/#\~/$HOME}
            
            if [[ -L "$symlink" ]]; then
                warn "$symlink is symlinked to $filepath"
                warn "Removing '$filepath' will result in a broken symlink '$symlink'"
                yes_or_no "Do you want to keep a copy of '$filepath' at '$symlink'?"

                if [[ $? -eq 0 ]]; then
                    unlink $symlink
                    cp $filepath $symlink
                    info "created copy"
                else
                    unlink $symlink
                    rm $filepath
                    info "removed $filepath and $symlink"
                fi
            fi

            # remove line from ./links
            sed -i '' "/$filename/d" ./links
        fi
    fi

    rm $filepath
    info "removed $filepath"
}

rm_formula() {
    local formula="$1"
    
    if ! is_formula "$formula"; then
        error "$formula is not a formula"
    fi

    items=$(ls -A $formula)
    for item in $items; do
        dispatch $formula/$item
    done
    
    rm -r $formula
    info "removed $formula"
}

dispatch() {
    if [[ -d "$1" ]]; then
        rm_formula "$1"
    else
        rm_file "$1"
    fi
}

main() {
    for arg in $@; do
        dispatch $arg
    done
    success
}

$@
