#!/usr/bin/env bash

set -e

handle_linked() {
    local item="$1"
    local item_dir
    item_dir=$(dirname "$item")
    local links_path="$item_dir"/links

    if [[ -e "$links_path" ]]; then
        if out=$(grep -F "$(basename $item)" "$links_path"); then
            # grab symlink from file
            # file format: source -> target
            symlink=$(echo "$out" | awk '{print $1}')

            # replace ~ with $HOME
            symlink=${symlink/#\~/$HOME}

            if [[ -L "$symlink" ]]; then
                warn "'$symlink' is symlinked to '$item'"
                warn "Removing '$item' will result in a broken symlink '$symlink'"
                if yes_or_no "Do you want to keep a copy of '$item' at '$symlink'?"
                then
                    unlink "$symlink"
                    cp -r "$item" "$symlink"
                    info "Created a copy of '$item' at '$symlink'"
                else
                    unlink "$symlink"
                fi
            else
                warn "'$symlink' is not a symlink"
            fi
            
            # remove line from $links_path
            sed -i '' "#$item#d" "$links_path"

            # remove item
            rm -r "$item"

            return 0
        fi
    fi

    return 1
}

rm_item() {
    local item="$1"
    item="$(norm_path $item)"
    
    handle_linked "$item" ||
    if [[ -d "$item" ]]; then
        for subitem in $(ls -A "$item"); do
            if [[   ! "$subitem" = "links" && \
                    ! "$subitem" = "formula" \
                ]]
            then
                rm_item "$item/$subitem"
            fi
        done
        if is_formula "$item"; then
            if [[ -e "$item/links" ]]; then
                rm "$item/links"
            fi
            rm "$item/formula"
        fi
        rm -d "$item"
    else
        rm "$item"
    fi

    info "Removed '$item'"
}

main() {
    for arg in "$@"; do
        if [[ -e "$arg" ]]; then
            rm_item "$arg"
        else
            error "'$arg' does not exist"
        fi
    done
}

"$@"
