#!/usr/bin/env bash

set -e

create_formula() {
    local formula="$1"
    
    if [[ -e "$formula/formula" ]]; then
      error "formula $formula already exists"
    fi

    mkdir -p "$formula"
    touch "$formula/formula"
    # shellcheck disable=SC2154
    cp "$base/templates/formula_template" "$formula/formula"
    chmod +x "$formula/formula"
    info "Created formula $formula"
}

save_link_to_file() {
    local source="$1"
    local target="$2"
    local file="$3"

    source="$(norm_path $source)"
    target="$(norm_path $target)"
    local line="$source -> $target"

    if out=$(grep -F "$target" "$file"); then
        error "Link failed: Another link to '$target' already exists in '$file'"
    fi

    echo "$line" >> "$file"
    info "Appended '$line' to '$file'"
}

link_path() {
    local normalized_path="$1"
    local formula="$2"
    local source
    local target="$normalized_path"
    
    if [[ -d "$normalized_path" ]]; then
        source="$formula" 
        rm -rf "$normalized_path"
    else
        source="$formula/$(basename "$normalized_path")"
    fi

    local out
    out=$(ln -svf "$(norm_path "$source")" "$target")

    save_link_to_file "$normalized_path" "$source" "$formula/links"

    info "Created symlink '$out' and saved to '$formula/links'"
}

add_path() {
    local should_link="$1"
    local path="$2"
    local formula="$3"
    local normalized_path
    normalized_path="$(norm_path "$path")"

    if [[ ! -e "$normalized_path" ]]; then
        error "'$normalized_path' does not exist" 
    fi
    
    if [[ ! -e "$formula/formula" ]]; then
        create_formula "$formula"
    fi

    # If the path is a directory, copy over the entries inside the directory
    # and not the directory itself
    if [[ -d "$normalized_path" ]]; then
        cp -r "$normalized_path"/* "$formula"
    else
        cp "$normalized_path" "$formula"
    fi
    
    if [[ "$should_link" = true ]]; then
        link_path "$normalized_path" "$formula"
    fi

    info "Added '$path' to $formula"
}

add_paths_to_formula() {
    local should_link="$1"
    local args=("$@")
    local formula=${args[${#args[@]}-1]}
    
    for i in $(seq 1 $((${#args[@]}-2))); do
        add_path "$should_link" "${args[$i]}" "$formula"
    done
}

main() {
    local should_create_formula=false
    local should_link=false
    
    while [[ $# -ne 0 ]]; do
        case $1 in
            -f|--formula)
                shift
                should_create_formula=true
                ;;
            -l|--link)
                shift
                should_link=true
                ;;
            -*)
                invalid_opt_error "$1" 
                ;;
            *)
                break
                ;;
        esac
    done

    if [[ $should_create_formula = true && $should_link = false ]]; then
        assert_num_args_at_least 1 $#
        create_formula "$1"
    else
        assert_num_args_at_least 2 $#
        add_paths_to_formula $should_link "$@"
    fi
}

"$@"
